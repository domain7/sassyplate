/*
	SASS & COMPASS BOILERPLATE
	For documentation and more information on SASS and Compass, refer to the official documentation:
		+ SASS: http://sass-lang.com
		+ Compass: http://compass-style.org

	This file acts as an asset manager and loads the following:
		+ Compass files
		+ Libraries
		+ Variables (fonts, colours, etc)
		+ Mixins (reusable styles)
		+ Modules (larger, self-contained, reusable units)
		+ Partials (parts of styling broken off for maintainability)
		+ A top-down stylesheet

	Note that files are included in order of necessity. For example, Compass CSS stuff can be used in
	variables which can be used in mixins, modules, site styles, etc.

	What about media queries?
	Note that since SASS allows you to nest @media declarations, separate stylesheets containing
	media queries are unnecessary. Nesting @media declarations also reinforces a modular approach.

*/
/*	Imported modules from Compass  */
/* line 17, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

/* line 22, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
html {
  line-height: 1;
}

/* line 24, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
ol, ul {
  list-style: none;
}

/* line 26, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 28, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

/* line 30, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
q, blockquote {
  quotes: none;
}
/* line 103, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

/* line 32, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
a img {
  border: none;
}

/* line 116, ../../../../../../Applications/compass.app/Contents/Resources/ruby/compass_0.12/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary {
  display: block;
}

/*
	Libraries, variables, and mixins 

	An example of a SASS library is http://github.com/nathanshubert/Unicode-Shapes-Preprocessor-Library.
	They should be prefixed with an underscore, stored in the includes directory,
	and are included like such:
	@import "includes/library-name";
	
*/
/* Variables
/* + + + + + + + + + + + + + + + + + + + + + + + + + + + */
/* Mixins
/* + + + + + + + + + + + + + + + + + + + + + + + + + + + */
/* 
	Modules 
	Self contained pieces of styling that can be reused.
	Modules should have the following characteristics: 
		+ Be context independent so they can be used anywhere.
		+ Defined within a mixin so that they can be used easily, anywhere.
		+ Be applied to a class that describes what the element IS, not what it looks like.
		+ Contain their own variations, fallbacks, and possibly media queries
	
	Buttons are a good example of a module.

	Module files should be prefixed with an underscore, stored in the modules directory, 
	and included like such:
	@import "modules/module-name";

*/
/* 
	Partials 
	Pieces of code that aren't modular in nature, but are broken off for easier maintainability.
	
	Partials should be prefixed with an underscore, stored in the partials directory,
	and included as such:
	@import "partials/partial-name";
	
*/
/*
	Site styles 
	A traditional-style top-down stylesheet.

*/
